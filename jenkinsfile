pipeline {
    agent any

    environment {
        SSH_KEY = credentials('e06285f3-0d2d-434a-91a4-05aecbcbf5a7')
        TARGET_SERVER = '15.207.71.31'
        BASE_TARGET_DIR = '/home/ubuntu'
    }

    stages {
        stage('Deploy to Target Server') {
            steps {
                script {
                    // Use sshagent to run the SSH command with credentials
                    sshagent(credentials: [SSH_KEY]) {
                        // Run the command with options and handle errors
                        def result = sh script: "ssh -o StrictHostKeyChecking=no -i /var/lib/jenkins/.ssh/id_rsa ${TARGET_SERVER} 'mkdir -p ${BASE_TARGET_DIR}/${env.BRANCH_NAME.toLowerCase()}'", returnStatus: true

                        // Check the exit code and handle accordingly
                        if (result != 0) {
                            error "Failed to execute the SSH command. Exit code: ${result}"
                        }
                    }
                }
            }
        }

        stage('Install Node.js and npm') {
            steps {
                script {
                    // Use the Node.js installation configured in Jenkins
                    def nodejsInstallation = tool 'nodejs'
                    def nodejsHome = "${nodejsInstallation}/bin"
                    env.PATH = "${nodejsHome}:${env.PATH}"

                    // Install npm version 8 globally
                    def npmInstallResult = sh(script: 'npm install -g npm@8', returnStatus: true)
                    if (npmInstallResult != 0) {
                        error "Failed to install npm. Exit code: ${npmInstallResult}"
                    }
                }
            }
        }

        stage('Deploy Node.js Project') {
            steps {
                script {
                    // Assuming your Node.js project is in the current workspace
                    def workspace = pwd()

                    // Use rsync to copy the project to the target server
                    def rsyncResult = sh(script: "rsync -r -e 'ssh -i /var/lib/jenkins/.ssh/id_rsa' ${workspace}/ ${TARGET_SERVER}:${BASE_TARGET_DIR}/${env.BRANCH_NAME.toLowerCase()}/", returnStatus: true)

                    // Check the exit code and handle accordingly
                    if (rsyncResult != 0) {
                        error "Failed to execute rsync command. Exit code: ${rsyncResult}"
                    }
                }
            }
        }
    }
}
