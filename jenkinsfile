pipeline {
    agent any

    environment {
        SSH_KEY = credentials('e8874ee0-5c49-426f-b66a-ecaf072bab9e')
        TARGET_SERVER = 'ubuntu@15.207.71.31'
        BASE_TARGET_DIR = '/home/ubuntu'
        NVM_DIR = '/root/.nvm'
        NODE_VERSION = '16.20.1'
    }

    tools {
        nodejs 'nodejs'
    }

    stages {
        stage('Set Up Node.js') {
            steps {
                script {
                    // Set up nvm
                    echo 'Setting up nvm...'
                    sh "export NVM_DIR=${NVM_DIR}"
                    sh "[ -s '${NVM_DIR}/nvm.sh' ] && . '${NVM_DIR}/nvm.sh'"
                    sh "[ -s '${NVM_DIR}/bash_completion' ] && . '${NVM_DIR}/bash_completion'"

                    // Install Node.js version
                    echo "Installing Node.js version ${NODE_VERSION}..."
                    sh "nvm install ${NODE_VERSION}"
                    sh "nvm use ${NODE_VERSION}"
                }
            }
        }

        stage('Deploy to Target Server') {
            steps {
                script {
                    // Copy SSH key to Jenkins user's home directory
                    sh "sudo cp /root/.ssh/id_rsa /var/lib/jenkins/.ssh/"
                    sh "sudo chown jenkins:jenkins /var/lib/jenkins/.ssh/id_rsa"

                    // Create an SSH configuration file to disable strict host key checking
                    sh 'echo "Host *\n  StrictHostKeyChecking no" > /var/lib/jenkins/.ssh/config'

                    // Use ssh-agent to run the SSH command
                    sshagent(credentials: [SSH_KEY]) {
                        // Run the command as the jenkins user without sudo
                        sh "ssh -i /var/lib/jenkins/.ssh/id_rsa ${TARGET_SERVER} 'mkdir -p ${BASE_TARGET_DIR}/${env.BRANCH_NAME.toLowerCase()}'"
                    }
                }
            }
        }

        stage('Build Node.js Project') {
            steps {
                script {
                    // Assuming your Node.js project is in the current workspace
                    def workspace = pwd()

                    // Build the Node.js project
                    sh "npm install"
                    sh "npm run build" // Adjust this line based on your build command

                    // Create the 'dist' directory if it doesn't exist
                    sh "mkdir -p ${workspace}/dist"
                }
            }
        }

        stage('Deploy Node.js Project') {
            steps {
                script {
                    // Assuming your Node.js project is in the current workspace
                    def workspace = pwd()

                    // Use rsync to copy only the necessary files to the target server
                    sh "rsync -r -e 'ssh -i /var/lib/jenkins/.ssh/id_rsa' ${workspace}/dist/ ${TARGET_SERVER}:${BASE_TARGET_DIR}/${env.BRANCH_NAME.toLowerCase()}/"
                }
            }
        }
    }
}

