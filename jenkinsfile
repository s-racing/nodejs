pipeline {
    agent any

    environment {
        SSH_KEY = credentials('e06285f3-0d2d-434a-91a4-05aecbcbf5a7')
    }

    stages {
        stage('Deploy to Target Server - Development') {
            when {
                branch 'Development'
            }
            steps {
                script {
                    deployToServer('Development')
                }
            }
        }

        stage('Deploy to Target Server - Production') {
            when {
                branch 'Production'
            }
            steps {
                script {
                    deployToServer('Production')
                }
            }
        }

        stage('Deploy to Target Server - Staging') {
            when {
                branch 'Staging'
            }
            steps {
                script {
                    deployToServer('Staging')
                }
            }
        }
    }
}

def deployToServer(branchName) {
    // Copy SSH key to Jenkins user's home directory
    sh "sudo cp /root/.ssh/id_rsa /var/lib/jenkins/.ssh/"
    sh "sudo chown jenkins:jenkins /var/lib/jenkins/.ssh/id_rsa"

    // Create an SSH configuration file to disable strict host key checking
    sh 'echo "Host *\n  StrictHostKeyChecking no" > /var/lib/jenkins/.ssh/config'

    // Use ssh-agent to run the SSH command
    sshagent(credentials: [SSH_KEY]) {
        // Run the command as the jenkins user without sudo
        sh "ssh -i /var/lib/jenkins/.ssh/id_rsa ubuntu@13.232.231.36 'mkdir -p /var/www/html/${branchName} && cd /var/www/html/${branchName} && git clone https://github.com/s-racing/nodejs.git . && npm install && npm run build'"
    }
}
