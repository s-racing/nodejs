pipeline {
    agent any

    stages {
        stage('Install Node.js and npm') {
            steps {
                script {
                    // Install Node.js using the NodeJS Jenkins plugin
                    // 'nodejs' should match the tool name you configured in Jenkins
                    def nodejsInstallation = tool name: 'nodejs', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
                    def nodejsHome = "${nodejsInstallation}/bin"
                    env.PATH = "${nodejsHome}:${env.PATH}"

                    // Install npm version 8 globally
                    sh 'npm install -g npm@8'
                }
            }
        }

        stage('Build') {
            steps {
                echo 'Building the application...'
                // Add your build steps here
            }
        }

        stage('Deploy to SSH host') {
            when {
                expression {
                    return (env.BRANCH_NAME == 'Development' || env.BRANCH_NAME == 'Production' || env.BRANCH_NAME == 'Staging')
                }
            }
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: '4eed8674-a85f-40c9-8130-06391e4239c1', keyFileVariable: 'SSH_KEY')]) {
                        // Adjust key file permissions
                        sh 'chmod 600 ${SSH_KEY}'

                        // Copy artifacts to the remote server using SCP
                        sh "scp -r ${WORKSPACE} ubuntu@13.232.231.36:/home/ubuntu/"
                    }
                }
            }
        }

        // Add more stages as needed

    }

    post {
        success {
            echo 'Pipeline succeeded! All stages completed successfully.'
        }
        failure {
            echo 'Pipeline failed! At least one stage failed.'
        }
    }
}
